install.packages("knitr")
install.packages("KernSmooth")
library(kernsmooth)
library(Kernsmooth)
library(Kernsmooth)
clear
library(KernSmooth)
install.packages("devtools")
find rtools
find_rtools()
library(devtools)
library(devtools)
find_rtools()
clear
getWD
getwd
getwd()
getwd()
setwd("C:/Users/Pabba Praneeth/Downloads/R_Programming_Projects/RProgrammingProject")
source("submitscript1.R")
submit()
ppr<- data.frame()
names(ppr)
names(ppr)<- c["id","nobs"]
ppr<- data.frame(id,nobs)
ppr<- data.frame("id","nobs")
ppr
row.names(ppr)
col.names(ppr)
column.names(ppr)
ppr<- data.table(id=numeric(),nobs=Numeric())
ppr<- data.frame(id=numeric(),nobs=Numeric())
ppr<- data.frame()
colnames(ppr)<- c["id","nobs"]
ppr<- data.frame(id=1:3,name=c["s","asf","saf"])
colnames(ppr)<- c("id","nobs")
ppr<- data.frame(id=1:3,name=c("s","asf","saf")
ppr<- data.frame(id=1:3,name=c("s","asf","saf"))
ppr<- data.frame(id=1:3,name=c("s","asf","saf"))
ppr
colnames(ppr)<- c("id","nobs")
ppr
x<- read.csv("./specdata/001.csv")
x
bad<- is.na(x)
xcl<- x[!bad]
nobs<- ncol(xcl)
nobs
xcl
foledata<- read.csv("./specdata/001.csv")
filedata<- read.csv("./specdata/001.csv")
filedata
coldata<- filedata[,2]
bad<- is.na(coldata)
coldatacleaned<- coldata[!bad]
nobs<- ncol[coldatacleaned]
coldata<- filedata[,2]
bad<- is.na(coldata)
coldatacleaned<- coldata[!bad]
nobs<- length[coldatacleaned]
coldata<- filedata[,2]
bad<- is.na(coldata)
coldatacleaned<- coldata[!bad]
coldatacleaned
length(coldatacleaned)
nobs
nobs<- length(coldatacleaned)
nobs
i<-1
i
nobs
outputvec<- c[i,nobs]
outputvec<- c(i,nobs)
c
outputvec
output<- data.frame()
output<- rbind(output, outputvec)
output
complete<- function(directory, id=1:332)
{
directoryPath<- paste(sep="","./",directory)
directoryPath
filelist<- list.files(path=directoryPath)
outputdata<- data.frame()
for(i in id){
filename<- filelist[i]
filepath<- paste(sep="",directoryPath,"/",filename)
filedata<- read.csv(filepath)
#Logic to find nobs in filedata
coldata<- filedata[,2]
bad<- is.na(coldata)
coldatacleaned<- coldata[!bad]
nobs<- length[coldatacleaned]
outputvector<- c(i,nobs)
outputdata<- rbind(outputdata,outputvector)
}
#Change names of outputdata
colnames(outputdata)<- c("id","nobs")
outputdata
}
complete('specdata',1)
complete<- function(directory, id=1:332)
{
directoryPath<- paste(sep="","./",directory)
directoryPath
filelist<- list.files(path=directoryPath)
outputdata<- data.frame()
for(i in id){
filename<- filelist[i]
filepath<- paste(sep="",directoryPath,"/",filename)
filedata<- read.csv(filepath)
#Logic to find nobs in filedata
coldata<- filedata[,2]
bad<- is.na(coldata)
coldatacleaned<- coldata[!bad]
nobs<- length(coldatacleaned)
outputvector<- c(i,nobs)
outputdata<- rbind(outputdata,outputvector)
}
#Change names of outputdata
colnames(outputdata)<- c("id","nobs")
outputdata
}
complete('specdata',1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
complete("specdata", 3)
complete("specdata", 30:25)
complete<- function(directory, id=1:332)
{
directoryPath<- paste(sep="","./",directory)
directoryPath
filelist<- list.files(path=directoryPath)
outputdata<- data.frame()
for(i in id){
filename<- filelist[i]
filepath<- paste(sep="",directoryPath,"/",filename)
filedata<- read.csv(filepath)
#changed Logic
coldata1<- filedata[,2]
coldata2<- filedata[,3]
good<- complete.cases(coldata1,coldata2)
coldata1mod<- coldata1[good]
nobs<- length(coldata1mod)
outputvector<- c(i,nobs)
outputdata<- rbind(outputdata,outputvector)
}
#Change names of outputdata
colnames(outputdata)<- c("id","nobs")
outputdata
}
complete("specdata", 30:25)
submit()
submit()
submit()
cor(3.5,1,61)
cor(3.5,1.61)
x
col1<- x[,2]
col2<- x[,3]
cor(col1,col2)
bad<- is.na(col1)
col1cleaned<- col1[!bad]
col1
col1cleaned
bad<- is.na(col2)
col2cleaned<- col2[!bad]
col2cleaned
cor(col1cleaned,col2cleaned)
complete('specdata')
x
cor(x[,1],x[,2],use=complete.obs)
cor(x[,1],x[,2],"use=complete.obs")
cor(x[,1],x[,2],use="complete.obs")
cor(col1,col2,use="complete.obs")
cor(col1,col2)
cor(col1,col2,use="complete.obs")
corr <- function(directory, threshold = 0) {
completeList<-complete('specdata')
corrdata<- numeric()
for(i in 1:332)
{
if(completeList[i][2] <= threshold){
next
}
#logic to read file
filename<- filelist[i]
filepath<- paste(sep="",directoryPath,"/",filename)
filedata<- read.csv(filepath)
#Logic to find correlation
col1<- filedata[,2]
col2<- filedata[,3]
corr<- cor(col1,col2,use="complete.obs")
corrdata<- c(corrdata,corr)
}
corrdata
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
completeList<- complete('specdata')
completeList
completeList[1,2]
corr <- function(directory, threshold = 0) {
completeList<-complete('specdata')
corrdata<- numeric()
for(i in 1:332)
{
if(completeList[i,2] <= threshold){
next
}
#logic to read file
filename<- filelist[i]
filepath<- paste(sep="",directoryPath,"/",filename)
filedata<- read.csv(filepath)
#Logic to find correlation
col1<- filedata[,2]
col2<- filedata[,3]
corr<- cor(col1,col2,use="complete.obs")
corrdata<- c(corrdata,corr)
}
corrdata
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
#basic data
directoryPath<- paste(sep="","./",directory)
filelist<- list.files(path=directoryPath)
completeList<-complete('specdata')
corrdata<- numeric()
for(i in 1:332)
{
if(completeList[i,2] <= threshold){
next
}
#logic to read file
filename<- filelist[i]
filepath<- paste(sep="",directoryPath,"/",filename)
filedata<- read.csv(filepath)
#Logic to find correlation
col1<- filedata[,2]
col2<- filedata[,3]
corr<- cor(col1,col2,use="complete.obs")
corrdata<- c(corrdata,corr)
}
corrdata
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
cr
summary(cr)
cr<- corr('specdata,5000')
cr<- corr('specdata',5000)
summary(cr)
cr<- corr('specdata')
summary(cr)
length(cr)
submit()
submit()
submit()
